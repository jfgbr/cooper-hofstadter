package br.galante.webapp.futebol.model;

// Generated 27/10/2010 11:46:42 by Hibernate Tools 3.4.0.Beta1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Participante generated by hbm2java
 */
@Entity
@Table(name = "participante", catalog = "futebol")
public class Participante implements java.io.Serializable {

	private Integer idParticipante;
	private Grupo grupo;
	private Campeonato campeonato;
	private Usuario usuario;
	private Time time;
	private Set<Partida> partidasForIdVisitante = new HashSet<Partida>(0);
	private Set<Partida> partidasForIdMandante = new HashSet<Partida>(0);

	public Participante() {
		this.grupo = new Grupo();
		this.campeonato = new Campeonato();
		this.usuario = new Usuario();
		this.time = new Time();
	}

	public Participante(Usuario usuario, Time time) {
		this.usuario = usuario;
		this.time = time;
	}

	public Participante(Grupo grupo, Campeonato campeonato, Usuario usuario,
			Time time, Set<Partida> partidasForIdVisitante,
			Set<Partida> partidasForIdMandante) {
		this.grupo = grupo;
		this.campeonato = campeonato;
		this.usuario = usuario;
		this.time = time;
		this.partidasForIdVisitante = partidasForIdVisitante;
		this.partidasForIdMandante = partidasForIdMandante;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "idParticipante", unique = true, nullable = false)
	public Integer getIdParticipante() {
		return this.idParticipante;
	}

	public void setIdParticipante(Integer idParticipante) {
		this.idParticipante = idParticipante;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idGrupo")
	public Grupo getGrupo() {
		return this.grupo;
	}

	public void setGrupo(Grupo grupo) {
		this.grupo = grupo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idCampeonato")
	public Campeonato getCampeonato() {
		return this.campeonato;
	}

	public void setCampeonato(Campeonato campeonato) {
		this.campeonato = campeonato;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idUsuario", nullable = false)
	public Usuario getUsuario() {
		return this.usuario;
	}

	public void setUsuario(Usuario usuario) {
		this.usuario = usuario;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idTime", nullable = false)
	public Time getTime() {
		return this.time;
	}

	public void setTime(Time time) {
		this.time = time;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "participanteByIdVisitante")
	public Set<Partida> getPartidasForIdVisitante() {
		return this.partidasForIdVisitante;
	}

	public void setPartidasForIdVisitante(Set<Partida> partidasForIdVisitante) {
		this.partidasForIdVisitante = partidasForIdVisitante;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "participanteByIdMandante")
	public Set<Partida> getPartidasForIdMandante() {
		return this.partidasForIdMandante;
	}

	public void setPartidasForIdMandante(Set<Partida> partidasForIdMandante) {
		this.partidasForIdMandante = partidasForIdMandante;
	}

}
